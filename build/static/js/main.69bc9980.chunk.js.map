{"version":3,"sources":["components/actions/cartActions.js","components/actions/action-types/cart-actions.js","components/actions/index.js","components/Navbar.js","components/MaterialClass.js","components/Home.js","components/Recipe.js","components/Cart.js","components/Product.js","App.js","components/reducers/cartReducer.js","index.js","components/middleware/index.js"],"names":["addToCart","id","type","getData","dispatch","fetch","then","response","json","payload","StyledBadge","withStyles","theme","badge","right","top","border","palette","background","paper","padding","backgroundColor","fontSize","opacity","Badge","StyledShoppingCartIcon","root","marginBottom","left","ShoppingCartIcon","Navbar","qual","this","setState","linkAtivo","Container","className","CssBaseline","AppBar","position","color","elevation","Toolbar","Typography","variant","componente","noWrap","to","pathname","state","linkAtivado","style","badgeContent","props","totalAtCart","component","total","Component","connect","setInitials","Classex","makeStyles","maxWidth","MuiCardMediaRoot","backgroundSize","backgroundRepeat","backgroundPosition","maxHeight","paddingLeft","paddingTop","height","width","display","float","useStyles","StyledAddShoppingCartIcon","margin","AddShoppingCartIcon","Home","handleClick","itemList","items","map","item","index","Grid","key","xs","sm","md","Card","quantity","CardActionArea","CardMedia","src","picture","title","alt","borderColor","CardContent","gutterBottom","align","minHeight","class","price","parseInt","CardActions","flexFlow","Button","size","onClick","classes","container","spacing","ContainerRecipe","alignContent","textAlign","Recipe","addedItems","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","holder","cardMedia","quantityInCart","cardContent","join","description","length","cardGrid","StyledContainer","justifyContent","zIndex","boxShadow","handleAddToCart","match","params","find","e","rooth","window","location","href","split","assign","button","App","exact","path","Product","initState","cartReducer","action","newItems","ind","indexOf","newTotalAtCart","addedItem","existed_item","itemToAdd","stock","actualItem","itemToRemove","new_items","filter","stockDevolution","actualItemAdd","actualItemSub","removedItem","sendRemove","Object","concat","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69bc9980.chunk.js","sourcesContent":["\r\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,SET_INITIALS} from './action-types/cart-actions'\r\n\r\nexport const addToCart= (id)=>{\r\n    return{\r\n        type: ADD_TO_CART,\r\n        id\r\n    }\r\n}\r\n\r\nexport const removeItem=(id)=>{\r\n    return{\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n}\r\n\r\nexport const subtractQuantity=(id)=>{\r\n    return{\r\n        type: SUB_QUANTITY,\r\n        id\r\n    }\r\n}\r\n\r\nexport const addQuantity=(id)=>{\r\n    return{\r\n        type: ADD_QUANTITY,\r\n        id\r\n    }\r\n}\r\n\r\nexport const setInitials = ()=>{\r\n    return{\r\n        type: SET_INITIALS\r\n    }\r\n}\r\n","\r\n//Types should be in const to avoid typos and duplication since it's a string and could be easily miss spelled\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const ADD_SHIPPING = 'ADD_SHIPPING';\r\nexport const SET_INITIALS = 'SET_INITIALS';","import { SET_INITIALS } from \"./action-types/cart-actions\";\r\n\r\n\r\nexport function getData() {\r\n    return function(dispatch) {\r\n      return fetch('http://localhost:3000/products')\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          dispatch({ type: SET_INITIALS , payload: json });\r\n        });\r\n    };\r\n  };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setInitials } from './actions/cartActions'\r\nimport { getData } from './actions/index.js'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport ShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledBadge = withStyles(theme => ({\r\n  badge: {\r\n    right: -6,\r\n    top: -12,\r\n    border: `1px solid ${theme.palette.background.paper}`,\r\n    padding: '2px',\r\n    backgroundColor: '#FFF',\r\n    fontSize: '10px',\r\n    opacity: 0.8\r\n  },\r\n}))(Badge);\r\n\r\nconst StyledShoppingCartIcon = withStyles(theme => ({\r\n  root: {\r\n    marginBottom: -4,\r\n    left: 12\r\n  },\r\n}))(ShoppingCartIcon);\r\n\r\nclass Navbar extends Component {\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggleClass(qual) {\r\n        this.setState({ linkAtivo: qual });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Container className='topo'>\r\n                <CssBaseline />\r\n                <AppBar position=\"static\" color=\"default\" elevation={0} >\r\n                    <Toolbar >\r\n                    <Typography variant=\"h5\" componente=\"h1\" color=\"inherit\" noWrap >\r\n                        Loja \r\n                    </Typography>\r\n                    <nav>\r\n                        <Link to={{\r\n                                    pathname: '/',\r\n                                    state: { linkAtivado: 'produto' }\r\n                                }} \r\n                            variant=\"button\" \r\n                            color=\"textPrimary\" \r\n                            >Produtos</Link>\r\n                        <Link to={{\r\n                                    pathname: '/cart',\r\n                                    state: { linkAtivado: 'cart' }\r\n                                }} \r\n                            variant=\"button\" \r\n                            color=\"textPrimary\" \r\n                             >\r\n                          Meu carrinho\r\n                          <StyledShoppingCartIcon style={{ fontSize: 18 }} />\r\n                          <StyledBadge badgeContent={this.props.totalAtCart} color=\"secondary\"/>\r\n                          <Typography variant=\"h5\" color=\"inherit\" noWrap component=\"h5\">\r\n                              Total: R$ {this.props.total},00\r\n                          </Typography>\r\n                        </Link>\r\n                    </nav>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        total: state.total,\r\n        totalAtCart: state.totalAtCart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n\r\n    return{\r\n        getData: ()=>{dispatch(getData())},\r\n        setInitials: (id)=>{dispatch(setInitials(id))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Navbar);","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst getStyles = function() {\r\n    return makeStyles({\r\n         root: {\r\n         maxWidth: '30%',\r\n         },\r\n         MuiCardMediaRoot: {\r\n             backgroundSize: 'cover',\r\n             backgroundRepeat: 'no-repeat',\r\n             backgroundPosition: 'center',\r\n             maxHeight: 290+'px',\r\n             maxWidth: 98+'%',\r\n             paddingLeft: 1+'%',\r\n             paddingTop: 1+'%',\r\n             height: 2900+'px',\r\n             width: 1000+'px',\r\n             display: 'inline-block',\r\n             float: 'left',\r\n             backgroundColor: '#fff'\r\n         }\r\n         \r\n     });\r\n };\r\nconst Classex = ()=>{ \r\n    var useStyles = getStyles();\r\n    return useStyles(); \r\n};\r\n\r\n  \r\n  \r\nexport default Classex;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addToCart, setInitials } from './actions/cartActions'\r\nimport { getData } from './actions/index'\r\nimport classes from './MaterialClass'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst StyledAddShoppingCartIcon = withStyles(theme => ({\r\n  root: {\r\n    margin: '-3px 0'\r\n  },\r\n}))(AddShoppingCartIcon);\r\n\r\nclass Home extends Component{\r\n\r\n    componentDidMount() {\r\n        this.props.getData();\r\n    }\r\n\r\n    handleClick = (id)=>{\r\n        this.props.addToCart(id);\r\n    }\r\n\r\n    render(){\r\n        \r\n        let itemList = this.props.items.map((item, index)=>{\r\n            return(\r\n              <Grid item key={item} xs={12} sm={6} md={4} >\r\n                <Card key={item.id}>\r\n                  <div className={ item.quantity < 1 && 'disabled' }>\r\n                    <Link to={'/product/'+item.id} className='neutral'>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            src={item.picture}\r\n                            title={item.title}\r\n                            component=\"img\"\r\n                            alt={item.title}\r\n                            style={{padding: 5+'px', backgroundColor: '#fff', borderColor: '#fff'}}\r\n                            />\r\n                        <CardContent>\r\n                          <Typography gutterBottom variant=\"subtitle2\" component=\"h4\" align=\"justify\" style={{minHeight: 110 + 'px'}}>\r\n                          {item.title}\r\n                          </Typography>\r\n                          <div class=\"priceBlock\">\r\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\r\n                              Por apenas:\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n                              R$ {item.price},00\r\n                            </Typography>\r\n                            Ou em 6x de R$ {parseInt(item.price / 6)},00 sem juros\r\n                          </div>\r\n                          <div class=\"outOfStock\">\r\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\r\n                              ..\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n                              PRODUTO ESGOTADO\r\n                            </Typography>\r\n                            <span>..</span>\r\n                          </div>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    </Link>\r\n                    <CardActions key={item.id} style={{flexFlow: 'column'}}>\r\n                        <Button className={'ativo'}   size=\"large\" variant=\"contained\" color=\"primary\"  width=\"100%\" \r\n                          onClick={()=>{this.handleClick(item.id)}}>\r\n                          <Typography variant=\"subtitle2\" component=\"p\">Adicionar ao carrinho </Typography> <AddShoppingCartIcon />\r\n                        </Button>\r\n                        <Button className={'inativo'} size=\"large\" variant=\"contained\" color=\"primary\"  width=\"100%\" onClick={()=>{return null}}>\r\n                          <Typography variant=\"subtitle2\" component=\"span\">Adicionar ao carrinho </Typography> <StyledAddShoppingCartIcon />\r\n                        </Button>\r\n                    </CardActions> \r\n                  </div>\r\n                </Card>\r\n              </Grid>\r\n            )\r\n        });\r\n\r\n        return(\r\n          <Container className={classes.container} maxWidth=\"md\">\r\n            <Typography variant=\"h5\" component=\"h2\">Nossos Produtos:</Typography>\r\n            <Grid container spacing={4}>\r\n              {itemList}\r\n            </Grid>\r\n          </Container>\r\n        )\r\n    }\r\n};    \r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        total: state.total,\r\n        totalAtCart: state.totalAtCart\r\n    }\r\n}\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    \r\n    return{\r\n        addToCart: (id)=>{dispatch(addToCart(id))},\r\n        getData: ()=>{dispatch(getData())},\r\n        setInitials: (id)=>{dispatch(setInitials(id))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Typography, Button, Container } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst ContainerRecipe = withStyles(theme => ({\r\n  root: {\r\n    width: '25%',\r\n    display: 'inline-flex',\r\n    flexFlow: 'column wrap',\r\n    alignContent: 'right',\r\n    textAlign:  'right',\r\n    float: 'right'\r\n  },\r\n}))(Container);\r\n\r\nclass Recipe extends Component{\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render(){\r\n  \r\n        return(\r\n\r\n                    <ContainerRecipe>\r\n                        <Typography component=\"p\" variant=\"h6\"><b>Total: </b>R$ {this.props.total},00</Typography>\r\n                        <Button size=\"small\" color=\"primary\" variant=\"contained\" className=\"right\">Finalizar Compra</Button>\r\n                    </ContainerRecipe>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n        total: state.total,\r\n        totalAtCart: state.totalAtCart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Recipe)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeItem, addQuantity, subtractQuantity } from './actions/cartActions'\r\nimport Recipe from './Recipe'\r\nimport classes from './MaterialClass'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nclass Cart extends Component{\r\n \r\n    componentDidMount() {\r\n        //this.props.setClassTheme();\r\n    }\r\n\r\n    //to remove the item completely\r\n    handleRemove = (id)=>{\r\n        this.props.removeItem(id);\r\n    }\r\n    //to add the quantity\r\n    handleAddQuantity = (id)=>{\r\n        this.props.addQuantity(id);\r\n    }\r\n    //to substruct from the quantity\r\n    handleSubtractQuantity = (id)=>{\r\n        this.props.subtractQuantity(id);\r\n    }\r\n\r\n    render(){\r\n        let holder = (\r\n            this.props.addedItems.map((item, index) =>{\r\n                return(\r\n                    <Grid item key={item}>\r\n                        <Card key={item.id}>\r\n                            <CardActionArea component=\"div\" className={ this['props']['items'][index]['quantity'] < 1 && 'disabled' }>\r\n                                <Container className={'conteudo coluna1'} >\r\n                                    <CardMedia\r\n                                        className={classes.cardMedia}\r\n                                        src={item.picture}\r\n                                        title={item.title}\r\n                                        component=\"img\"\r\n                                        alt={item.title}\r\n                                        style={{padding: 5+'px', backgroundColor: '#fff', borderColor: '#fff'}}\r\n                                        />\r\n                                    <Typography variant=\"h5\" component=\"span\"><b>Price:</b> R${item.price},00</Typography>\r\n                                    <Typography fontSize={'1rem'} component=\"span\"><b>Quantity: {item.quantityInCart}</b></Typography><br/>\r\n                                    <CardActions className=\"add-remove\">\r\n                                        \r\n                                        <Link to=\"/cart\"><AddCircleIcon  className=\"material-icons\" onClick={()=>{this.handleAddQuantity(item.id)}}/></Link>\r\n                                        <Link to=\"/cart\"><RemoveCircleIcon  className=\"material-icons\" onClick={()=>{this.handleSubtractQuantity(item.id)}}/></Link>\r\n                                        <Link to=\"/cart\" className={'remove'}>\r\n                                            <DeleteForeverIcon onClick={()=>{this.handleRemove(item.id)}}/></Link>\r\n                                    </CardActions>\r\n                                </Container>   \r\n                                <Container className={'conteudo coluna2'} >\r\n                                    <CardContent \r\n                                        className = {[classes.cardContent, ' '].join(' ')}\r\n                                        >\r\n                                        <Typography component=\"h5\" variant=\"h5\">\r\n                                            {item.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                        {item.description}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Container>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    </Grid>                                               \r\n                ) \r\n            })\r\n        );\r\n        let addedItems = this.props.addedItems.length ?\r\n            (\r\n            <div>\r\n                <Grid \r\n                    className={classes.cardGrid}\r\n                    spacing={4}>\r\n                    {holder}        \r\n                </Grid>\r\n                <br/>\r\n                <Recipe />\r\n            </div>\r\n            ) :\r\n            ( <Typography variant=\"h6\" component=\"p\" spacing={4}>Seu carrinho está vazio.</Typography> )\r\n\r\n       return(\r\n        <Container \r\n            className={[classes.cardGrid, 'cart'].join(' ')}\r\n            maxWidth=\"md\">\r\n            <Typography variant=\"h5\" component=\"h2\">Meu Carrinho:</Typography>\r\n            <br/>\r\n            {addedItems}\r\n        </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.items,\r\n        totalAtCart: state.totalAtCart,\r\n        addedItems: state.addedItems\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        removeItem: (id)=>{dispatch(removeItem(id))},\r\n        addQuantity: (id)=>{dispatch(addQuantity(id))},\r\n        subtractQuantity: (id)=>{dispatch(subtractQuantity(id))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addToCart, setInitials } from './actions/cartActions'\r\nimport { getData } from './actions/index'\r\nimport classes from './MaterialClass'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst StyledContainer = withStyles(theme => ({\r\n    root: {\r\n        flexFlow: 'row nowrap',\r\n        justifyContent: 'right',\r\n        textAlign: 'right',\r\n        padding: '5% 0 0 0 '\r\n    },\r\n}))(Container);\r\n\r\nconst inactiveButton = withStyles(theme => ({\r\n    root: {\r\n        opacity: 1,\r\n        zIndex: 1,\r\n        backgroundColor: 'lightgray',\r\n        boxShadow: 'none',\r\n        position: 'relative !important'\r\n    },\r\n}))(Button);\r\n\r\n\r\n\r\n\r\nclass Cart extends Component{\r\n \r\n    componentDidMount() {\r\n        this.props.getData();\r\n    }\r\n\r\n    handleAddToCart = (id)=>{\r\n        this.props.addToCart(id);\r\n    }\r\n\r\n    render(){\r\n        let id = parseInt(this.props.match.params.id);\r\n        let actualStock = this.props.items;\r\n        let item = actualStock.find(e => e.id === id);\r\n        if(!item){\r\n            let actualLocation = window.location.href;\r\n            let rooth = \"http://\" +actualLocation.split('/')[2];\r\n            window.location.assign(rooth);\r\n        }\r\n\r\n        let holder = (\r\n            <Grid item key={item}>\r\n                <Card key={item.id}>\r\n                    <CardActionArea component=\"div\" className={ item.quantity < 1 && 'disabled' }>\r\n                        <Container className={'conteudo coluna1'} >\r\n                            <CardMedia\r\n                                className={classes.cardMedia}\r\n                                src={item.picture}\r\n                                title={item.title}\r\n                                component=\"img\"\r\n                                alt={item.title}\r\n                                style={{padding: 5+'px', backgroundColor: '#fff', borderColor: '#fff'}}\r\n                                />\r\n                            <Typography variant=\"h5\" component=\"span\"><b>Preço:</b> R${item.price},00</Typography>\r\n                            <Typography fontSize={'1rem'} component=\"span\"><b>Quantidade: {item.quantityInCart || 0}</b></Typography><br/>\r\n                        </Container>   \r\n                        <Container className={'conteudo coluna2'} >\r\n                            <CardContent \r\n                                className = {[classes.cardContent, ' '].join(' ')}\r\n                                >\r\n                                <Typography component=\"h5\" variant=\"h5\">\r\n                                    {item.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                {item.description}\r\n                                </Typography>\r\n                                <StyledContainer key={item.id} >\r\n                                    {item.quantity > 0 &&\r\n                                        <Button className={classes.Button}  size=\"large\" variant=\"contained\" color=\"primary\"  width=\"100%\" onClick={()=>{this.handleAddToCart(item.id)}}>\r\n                                            <Typography variant=\"subtitle2\" component=\"p\">Adicionar ao carrinho </Typography> <AddShoppingCartIcon />\r\n                                        </Button>\r\n                                    }\r\n                                    {item.quantity < 1 &&\r\n                                        <inactiveButton className={[classes.button].join(' ')} size=\"large\" variant=\"contained\" color=\"primary\"  width=\"100%\" onClick={()=>{return null}}>\r\n                                            <Typography variant=\"subtitle2\" component=\"span\">Produto Esgotado</Typography>\r\n                                        </inactiveButton>\r\n                                    }\r\n                                </StyledContainer>\r\n                            </CardContent>\r\n                        </Container>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>                                               \r\n        );\r\n        const addedItems =\r\n            (\r\n            <div>\r\n                <Grid \r\n                    className={classes.cardGrid}\r\n                    spacing={4}>\r\n                    {holder}        \r\n                </Grid>\r\n            </div>\r\n            ) \r\n\r\n       return(\r\n        <Container \r\n            className={[classes.cardGrid, 'cart'].join(' ')}\r\n            maxWidth=\"md\">\r\n            <Typography variant=\"h5\" component=\"h2\">Produto: {item.id}</Typography>\r\n            <br/>\r\n            {addedItems}\r\n        </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.items,\r\n        total: state.total,\r\n        totalAtCart: state.totalAtCart\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        addToCart: (id)=>{dispatch(addToCart(id))},\r\n        getData: ()=>{dispatch(getData())},\r\n        setInitials: (id)=>{dispatch(setInitials(id))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart);","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Cart from './components/Cart'\nimport Product from './components/Product'\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <CssBaseline/>            \n          <Navbar/>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/cart\" component={Cart} />\n            <Route path=\"/product/:id\" component={Product}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import {\r\n    ADD_TO_CART,\r\n    REMOVE_ITEM,\r\n    SUB_QUANTITY,\r\n    ADD_QUANTITY,\r\n    SET_INITIALS\r\n} from '../actions/action-types/cart-actions'\r\n\r\nconst initState = {\r\n    items: [],\r\n    addedItems:[],\r\n    totalAtCart: 0,\r\n    total: 0,\r\n    theme: {},\r\n    classes: {}\r\n}\r\n\r\nconst cartReducer = function(state = initState, action) {\r\n    if (action.type === ADD_TO_CART) {\r\n        //Pega o estoque atual\r\n        let newItems = state.items;\r\n        //Acha o produto da ação no estoque atual\r\n        let ind = newItems.map(e => e.id).indexOf(action.id);\r\n        \r\n        //Se não tiver produtos em estoque ejeta\r\n        if(newItems[ind].quantity < 1) return;\r\n\r\n        //Calula o novo total de produtos do carrinho\r\n        state.totalAtCart += 1;\r\n\r\n        //atribui o novo total do carro a constante\r\n        let newTotalAtCart = state.totalAtCart;\r\n\r\n        //Achao o produto a ser adicionado ao carrinho\r\n        let addedItem = state.items.find(item => item.id === action.id)\r\n        //Verifica se o produto já esta no carrinho\r\n        let existed_item = state.addedItems.find(item => action.id === item.id)\r\n        \r\n        if( !addedItem.quantityInCart) addedItem.quantityInCart = 0\r\n        addedItem.quantityInCart += 1\r\n        \r\n        //Se houver adiciona ao carrinho, ou apenas devolve o carrinho como está\r\n        let itemToAdd= existed_item ? [...state.addedItems] : [...state.addedItems, addedItem]; \r\n\r\n        //Calcula o novo estoque após a operação\r\n        let stock = newItems[ind].quantity - 1;\r\n\r\n        //atribui o novo total em estoque\r\n        newItems[ind].quantity = stock;\r\n\r\n        return {\r\n            ...state,\r\n            items: newItems,\r\n            addedItems: itemToAdd,\r\n            total: state.total + addedItem.price,\r\n            totalAtCart: newTotalAtCart\r\n        }\r\n    }\r\n\r\n    if (action.type === REMOVE_ITEM) {\r\n        //Acha o produto da ação no estoque atual\r\n        let actualItem = state.items.find(item => action.id === item.id);\r\n \r\n        let itemToRemove = state.addedItems.find(item => action.id === item.id)\r\n        let new_items = state.addedItems.filter(item => action.id !== item.id)\r\n\r\n        //Devolve ao estoque tudo que foi retirado d ocarrinho\r\n        let stockDevolution = actualItem.quantity + itemToRemove.quantityInCart ;\r\n        //atribui a nova quantidade de produto\r\n        actualItem.quantity = stockDevolution;\r\n        state.totalAtCart -= itemToRemove.quantityInCart;\r\n        state.total -= (itemToRemove.price * itemToRemove.quantityInCart);\r\n        \r\n        actualItem.quantityInCart = 0;\r\n\r\n\r\n\r\n        return {\r\n            ...state,\r\n            items: state.items,\r\n            addedItems: new_items,\r\n            total: state.total,\r\n            totalAtCart: state.totalAtCart\r\n        }\r\n    }\r\n\r\n    if (action.type === ADD_QUANTITY) {\r\n        //Acha o produto da ação no estoque atual\r\n        let actualItemAdd = state.items.find(item => action.id === item.id);\r\n        \r\n        //Se não tiver produtos em estoque ejeta\r\n        if(actualItemAdd.quantity < 1) return{...state};\r\n\r\n        state.totalAtCart += 1;\r\n\r\n        actualItemAdd.quantity -= 1;\r\n        \r\n        let addedItem = state.items.find(item => item.id === action.id);\r\n        addedItem.quantityInCart += 1;\r\n        state.total = state.total + addedItem.price\r\n        return {\r\n            ...state,\r\n            items: state.items,\r\n            addedItems: state.addedItems,\r\n            total: state.total,\r\n            totalAtCart: state.totalAtCart\r\n        }\r\n    }\r\n    if (action.type === SUB_QUANTITY) {\r\n        //Acha o produto da ação no estoque atual\r\n        let actualItemSub = state.items.find(item => action.id === item.id);\r\n\r\n        state.totalAtCart -= 1;\r\n\r\n        actualItemSub.quantity += 1;\r\n\r\n        state.total -= actualItemSub.price;\r\n\r\n        let removedItem = state.addedItems.find(item => item.id === action.id);\r\n\r\n        removedItem.quantityInCart -= 1;\r\n\r\n        //Remove se o total passar a ser zero\r\n        let sendRemove = removedItem.quantityInCart < 1 ?\r\n            {...state,addedItems: state.addedItems.filter(item => item.id !== action.id),total: state.total,totalAtCart: state.totalAtCart} : \r\n            {...state,total: state.total,totalAtCart: state.totalAtCart}\r\n            \r\n            return sendRemove\r\n    }\r\n    \r\n    if (action.type === SET_INITIALS) {\r\n        return Object.assign({}, state, {\r\n            items: state.items.concat(action.payload)\r\n        });\r\n    } else {\r\n        return state;\r\n    }\r\n\r\n\r\n    \r\n};\r\n\r\nexport default cartReducer;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport cartReducer from './components/reducers/cartReducer'\nimport { forbiddenWordsMiddleware } from \"./components/middleware\"\nimport thunk from \"redux-thunk\"\n \nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    cartReducer,\n    storeEnhancers( applyMiddleware(forbiddenWordsMiddleware, thunk) ) \n);\n\nReactDOM.render( <Provider store={store}><App/></Provider>, document.getElementById('root'));","export function forbiddenWordsMiddleware({ dispatch }) {\r\n  return function(next) {\r\n    return function(action) {\r\n      return next(action);\r\n    };\r\n  };\r\n}"],"sourceRoot":""}